$ git --version
git version 2.35.1.windows.2
#Find the version of the git installed in the system.
Working with Git
Initialize Git on a folder, making it a Repository
Git now creates a hidden folder to keep track of changes in that folder
When a file is changed, added or deleted, it is considered modified
You select the modified files you want to Stage
The Staged files are Committed, which prompts Git to store a permanent snapshot of the files
Git allows you to see the full history of every commit.
You can revert back to any previous commit.
Git does not store a separate copy of every file in every commit, but keeps track of changes made in each commit!
$ cd desktop- Changing directory to desktop.
$ mkdir Git - Making git directory.
$ git init - Intializing Git.
Initialized empty Git repository in C:/Users/hp/Desktop/Git/.git/
--------------------------------------------------------------------------------------------------------------------------------
Important bash commands:
$ pwd git
/c/Users/hp/desktop/git

ls  - List all the files in the current directory
-1.14-windows.xml    ntuser.dat.LOG2
'3D Objects'/         NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.0.regtrans-ms
AMDRM_Install.log    NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.1.regtrans-ms
echo - print a message to the screen or to a file if > (redirect) is present.
Touch new.txt -To create new emty  file "new.txt"
vim new.txt -to edit the file in the Vim editor
Exiting in between command shift +z+z.
---------------------------------------------------------------------------------------------------------------------------------
$ git config --global user.name "Mahima Tewatia"
$ git config --global user.email "mahima.tewatia@itsacheckmate.com"
: purpose - Add User and Id for whom the git is being used by locally.
----------------------------------------------------------------------------------------------------------------------------------
$ ssh-keygen -t rsa -b 4096 -C "mahima.tewatia@itsacheckmate.com"
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/hp/.ssh/id_rsa):

:Purpose- Create SSh key to authenticate the user to Global Repo.
$ ssh-keygen -t rsa -b 4096 -C "mahima.tewatia@itsackeckmate.com"
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/hp/.ssh/id_rsa):
Created directory /c/Users/hp/desktop/git
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /c/Users/hp/.ssh/id_rsa
Your public key has been saved in /c/Users/hp/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:LgkD9L33joNCg9epsFyvPDxf1yzVXt7mdP0ErsEYPKY mahima.tewatia@itsackeckmate.com
The key's randomart image is:
+---[RSA 4096]----+
|  .              |
| . . .           |
|  . . .          |
|   .   . .   .   |
|   .o...S = . o .|
|  o =oo+ + O o +o|
| . B +o.E = = o O|
|  o.* oo.+ . o =o|
|    o*. ... .   o|
+----[SHA256]-----+
$ eval "$(ssh-agent -s)"
Agent pid 1483

$ ssh-add -K /c/Users/hp/.ssh/id_rsa
Enter PIN for authenticator:
-----------------------------------------------------------------------------------------------------
git archive --format=tar HEAD

git archive --output=./example_repo_archive.tar --format=tar HEAD
-----------------------------------------------------------------------------------------------------
$ git remote add origin https://github.com/Mahima01/Training.git  :Purpose- Add remote Repo to the local Rel machine and connect it.

$ touch README.md    :Purpose- To create a README file for the repository

$ git init  :Purpose- Initialized empty Git repository in C:/Users/hp/Desktop/Git/.git/
------------------------------------------------------------------------------------------------------------

$ git status   #what is in the diffrent areas of repo
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        PasswordCheatSheet-200227-164354.pdf
        PhishingCheatSheet-200227-164243.pdf
        README.md
        Records - (Mahima).xlsx
        Screenshot (27).png
        Screenshot 2022-03-14 232114.png
        Screenshot 2022-03-15 004028.png
        Screenshot 2022-03-15 010331.png
        Screenshot 2022-03-15 010829.png
        new.txt

nothing added to commit but untracked files present (use "git add" to track)
-------------------------------------------------------------------------------------------------------------------------
$ git add .  
# Adds all the files in the local repository and stages them for commit
-----------------------------------------------------------------------------------------------------
$ git commit -m "First commit"     :Purpose- to commit files you added to your git repo
-----------------------------------------------------------------------------------------------------
$ git log  :Purpose- to see the history of commit you made to your files
-----------------------------------------------------------------------------------------------------

Git Branches
Branches allow you to work on different parts of a project without impacting the main branch.
When the work is complete, a branch can be merged with the main project.

$ git branch b1
$ git branch
  b1
* master

$ git checkout b1
Switched to branch 'b1'

----------------------------------------------------------------------------------------------------
Git Merge  merge branches
$ git merge b1
Updating 307013f..c31bf7b
Fast-forward
 new.txt | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)


$ git push -u origin master # pushes changes to origin
-----------------------------------------------------------------------------------------------------
$ git status   :Purpose-Lists all new or modified files to be committed


-----------------------------------------------------------------------------------------------------
$ git fetch   :Purpose-used to get files from the remote repository to the local repository but not into the working directory
$ git fetch origin
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 647 bytes | 58.00 KiB/s, done.
From https://github.com/Mahima01/LocalPush
   c31bf7b..288dedd  master     -> origin/master
-----------------------------------------------------------------------------------------------------   

 $ git log origin/master
commit 288deddd2eb9d48da5876fddeed29323f6e5be97 (origin/master)
Author: Mahima Tewatia <mahima.tewatia@itsacheckmate.com>
Date:   WED Mar 30 00:59:55 2022 +0530

    Update new.txt

commit c31bf7bbeff97f0b7d8d02f60f1b102f0bfd63d1 (HEAD -> master, b1)
Author: Mahima Tewatia <mahima.tewatia@itsacheckmate.com>
Date:   WED Mar 30 22:25:09 2022 +0530

    first b1 comit
    
    
    commit 307013f526f2981378dd3078ccbddfdf8d03057e
Author: Mahima Tewatia <mahima.tewatia@itsacheckmate.com>
Date:   WED Mar 30 22:25:09 2022 +0530

    commiting without staging

commit 248d1a22de036bbdc623cde87a1309bd05102a4a
Author: Mahima Tewatia <mahima.tewatia@itsacheckmate.com>
Date:   WED Mar 30 22:25:09 2022 +0530

    first commit
    ---------------------------------------------------------------------------------------------------
    
 #showing the differences between our local master and origin/master 
 $ git diff origin/master
diff --git a/new.txt b/new.txt
index 119a813..836ae8b 100644
--- a/new.txt
+++ b/new.txt
@@ -10,6 +10,4 @@ Adding SSh in git hub
