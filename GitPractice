itsacheckmate@itsacheckmate:~$ ls
123          ersion        index.html.4  new_Nano.save  Training-Repository
ab           Exampapers    linus         Pictures       Videos
Assignments  hi            linux         Public         wget-log
commands     hlo           Linux         snap           www.google.com
d            index.html    logfile       Templates      Zip.zip
Desktop      index.html.1  Music         test1.txt
Documents    index.html.2  Newfile       test2.txt
Downloads    index.html.3  new_Nano      text
itsacheckmate@itsacheckmate:~$ cd Training-Repository/
itsacheckmate@itsacheckmate:~/Training-Repository$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   linux/linux

no changes added to commit (use "git add" and/or "git commit -a")
itsacheckmate@itsacheckmate:~/Training-Repository$ git status -v
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   linux/linux

no changes added to commit (use "git add" and/or "git commit -a")
itsacheckmate@itsacheckmate:~/Training-Repository$ git diff --cache
error: invalid option: --cache
itsacheckmate@itsacheckmate:~/Training-Repository$ git diff --Cache
error: invalid option: --Cache
itsacheckmate@itsacheckmate:~/Training-Repository$ git diff help
fatal: ambiguous argument 'help': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
itsacheckmate@itsacheckmate:~/Training-Repository$ git diff --help
itsacheckmate@itsacheckmate:~/Training-Repository$ git diff --cached
itsacheckmate@itsacheckmate:~/Training-Repository$ git diff --cached
itsacheckmate@itsacheckmate:~/Training-Repository$ git diff --cached
itsacheckmate@itsacheckmate:~/Training-Repository$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   linux/linux
	modified:   new.txt

no changes added to commit (use "git add" and/or "git commit -a")
itsacheckmate@itsacheckmate:~/Training-Repository$ git add .
itsacheckmate@itsacheckmate:~/Training-Repository$ git diff --cached
diff --git a/linux/linux b/linux/linux
index 80b0cba..cde423a 100644
--- a/linux/linux
+++ b/linux/linux
@@ -71,4 +71,3 @@ cd .. : this command is used to move to the parent directory of current director
 cd “dir name”: This command is used to navigate to a directory with white spaces.Instead of using double quotes we can use single quotes then also this command will work. 
 $ cd "dir name"
 
-
diff --git a/new.txt b/new.txt
index f46cda6..9f63fa4 100644
--- a/new.txt
+++ b/new.txt
@@ -1 +1 @@
-changes
+I am practising git.^M
itsacheckmate@itsacheckmate:~/Training-Repository$ touch GitPractice

itsacheckmate@itsacheckmate:~/Training-Repository$ git stash
Saved working directory and index state WIP on main: d708a92 Practising linux commands
itsacheckmate@itsacheckmate:~/Training-Repository$ git checkout Branch2
branch 'Branch2' set up to track 'origin/Branch2'.
Switched to a new branch 'Branch2'
itsacheckmate@itsacheckmate:~/Training-Repository$ git diff Branch2..main
diff --git a/Database/Hospital Management System.drawio.svg b/Database/Hospital Management System.drawio.svg
new file mode 100644
index 0000000..0c99ef2
--- /dev/null
+++ b/Database/Hospital Management System.drawio.svg    
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- Do not edit this file with editors other than diagrams.net -->
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="834px" height="960px" viewBox="-0.5 -0.5 834 960" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2022-04-14T15:59:22.372Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36&quot; etag=&quot;CUvm_jUffuSygKY14HD_&quot; version=&quot;17.4.3&quot; type=&quot;github&quot;&gt;&lt;diagram id=&quot;Iy3N-nfoCOLkDRjxHkdD&quot; name=&quot;Page-1&quot;&gt;7Z1fc5s4EMA/TWZ6D84g8cfmMbbbNHdNkyZtepcXDzGKzRWQD8uN6ac/ARIGpDiOweDcqdNpjQBZ6Le7Wq0W+UQfBevzyFnML7GL/BOouesTfXwCIYDWgP6XlMRZyWAAs4JZ5LlZkbYpuPV+IXYnL115LlqWLiQY+8RbsEKQFU5xGKIpKV3oRBF+Kl/2iH23VLBwZqh0U1JwO3V8JFz23XPJnD0F7G/KPyJvNmffDIBlZ2cenOmPWYRXIfu+E6g/pn+y04HD62Lfu5w7Ln4qFOnvT/RRhDHJPgXrEfKTvi1324dnzubtjlBIdrrh6zdyPev/bUxsbXU5+di/uxv2AGT4fjr+ivXIGNFKSZBUO4InZ7z5JOZdtnzyAt8J6dHwEYfklp3R6PF07vnuJyfGq6RNS0L7iB8N5zjyftHrHZ+eArSAno4Ikwhola64Te5kdUZoSa+55g8KKkWXzrp04SdnSXhrsO87i6X3kLYvuTFwopkXDjEhOGAXOb43C+nnKa0LRfyZslYBgx6LHc36/ieKCFoXiljHnyMcIBLF9BJ2tmeY2S1MSXpAZ3U8bWQOWEZWNi/I28Bios7EfJbXvUFNPzDaryJvC+Qv6D/au+s/fhOQ0+ckKbEI/0Aj7GPaUeMQZzLg+X6laLlwpl44+4Qek8cwNiU37MmSIkz779FPVWLuuS4KE4SYOMR5yOVpgb2QpI9uDulfKosj7dQ8MWmbRvQYbI7p3+TyiIxwSJvpeCksRIXhCSUCUcIK5Vi3a8jLtBldaO3GVtcOxZbXLNXqyWcnQPTknRNN5070zjAV71q8ze55mwJvASly6bjHDmkXeCS+Qb5DPBy+35wRem1OAm6uUeieJQMuPXx/8wtF+Cu+dMKYG/LNucAJ3atULtLhEbkM7rOGNGna1o4u9qymiT2bF0bpI/0sj+2y/mbfcZ3IW8FOg0HZTtvlGpZ4FU0Ru6k41lbq0a1SNcCs1EP7a4aIUE8KP3/sOvJgCfLwPlj4OEaJ4memAKUjvBrb647tellkgGFIrIFEZg83suv9Z+lPLlx64iIk7z6oUV6qMfVGeQnnA1r9bb67It0Yaen43ippQyR9g2mnKutd13oD0C+bbxG10arxNtS0bCc1NhqZlsnYHk6NTXFalqjxGC2nkbdIXPHNtEyxrsNaZrLbZW1tc8GV2a7rdOt2yWz3QL+/2yCdz80OgHyb3z1WBvwZBXlDHrcl+mEfvGipQmpNo+7e5bZEPywxhIp0w6QHnZPuS4LlV8MkTuYQcaxWcF8BF4Du6QKB7jkKXeqYKCVujrPRIufHh+8r7f7+y+9nveHiL8ux3X/Cnkg5mVklbhftlv8RXYHZ7sCfp9vvXouhwPd6TtlMPmOlxw162Fr3pMVJ1LVDPPqoY29JOwUtBcRq+rwzZ36WJ2lx7nbni1Z9cWrFuE9u0Mxb0r5QKxovqMwbmkn3xekV0+9JGu5WmBvA3P0seiD6ZVyrh5QWBaGseW1rbsFyCgLkxy9xzx27A4AXHbZcr1UgVK4jb8h8D/SXR2tlxhvCfQRmXMwvPAvwKk15G6OpFzj+O2pzRlCRrkW6+2DoQFy2PEchihyC3CwemoZFv3qBCo3WQn0EodGBbMoVJ8ljX+OFWuRoEnab8VF5o21xlaM6YitXvL4rzl9ry/MSoN65L26LkzCVUrZNRd6QI25LAuNMrZUD3hTm7h1wW5xvnbmBR6hXNrkqZA2qobou6+5dcB6LL4dGE7ozpGA3CvsInHBbnHDdYBxMPq+CB5Wk0Cjszp1wKm/PjdbK967te/cqb11Ca9eUYPtQrjcEKgy+o0JvdOPteN/UpAh4VT7wIVB37oFDIIbAVT7wAUh37n9DIHpkKh+4Gbjd+9sQiPllKh+4cc5H4GpLFjdUxmjzpDvPDc43WCuQZju2Kc7N+dqdZwZvZoQbzt8V56Y5691zFufMQx9jd3Ie4dVCwW5yAt05bMlOVXz9aoynhLJSgbG6gbF8+zGG3TBkm0+2me0PJVtUqWXL7er9BneogpIdqviOCApzU5jbjI2ZH7E1+vbxznR/d3uftbXrz6Y9cbxmr3Io213bdhsWLNtuy9yNdh5qaRy3mIqgljS26sVRGmxpi6WZB+lLWSrM3STozk22uJhxGwcLatqWRcgDBbkG5DZXMqQtFl+xFHA2uyl0xpwWffB8fkF5C2i09sif/Fb6+a+k/LTPjsbrwmXjuHBwjSKPdkoyym7fSjrboXmLg5W/
[1]+  Stopped                 git diff Branch2..main

itsacheckmate@itsacheckmate:~/Training-Repository$ git diff Branch2...main
diff --git a/Database/Hospital Management System.drawio.svg b/Database/Hospital Management System.drawio.svg
new file mode 100644
index 0000000..0c99ef2
--- /dev/null
+++ b/Database/Hospital Management System.drawio.svg    
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- Do not edit this file with editors other than diagrams.net -->
+<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
+<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="834px" height="960px" viewBox="-0.5 -0.5 834 960" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2022-04-14T15:59:22.372Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36&quot; etag=&quot;CUvm_jUffuSygKY14HD_&quot; version=&quot;17.4.3&quot; type=&quot;github&quot;&gt;&lt;diagram id=&quot;Iy3N-nfoCOLkDRjxHkdD&quot; name=&quot;Page-1&quot;&gt;7Z1fc5s4EMA/TWZ6D84g8cfmMbbbNHdNkyZtepcXDzGKzRWQD8uN6ac/ARIGpDiOweDcqdNpjQBZ6Le7Wq0W+UQfBevzyFnML7GL/BOouesTfXwCIYDWgP6XlMRZyWAAs4JZ5LlZkbYpuPV+IXYnL115LlqWLiQY+8RbsEKQFU5xGKIpKV3oRBF+Kl/2iH23VLBwZqh0U1JwO3V8JFz23XPJnD0F7G/KPyJvNmffDIBlZ2cenOmPWYRXIfu+E6g/pn+y04HD62Lfu5w7Ln4qFOnvT/RRhDHJPgXrEfKTvi1324dnzubtjlBIdrrh6zdyPev/bUxsbXU5+di/uxv2AGT4fjr+ivXIGNFKSZBUO4InZ7z5JOZdtnzyAt8J6dHwEYfklp3R6PF07vnuJyfGq6RNS0L7iB8N5zjyftHrHZ+eArSAno4Ikwhola64Te5kdUZoSa+55g8KKkWXzrp04SdnSXhrsO87i6X3kLYvuTFwopkXDjEhOGAXOb43C+nnKa0LRfyZslYBgx6LHc36/ieKCFoXiljHnyMcIBLF9BJ2tmeY2S1MSXpAZ3U8bWQOWEZWNi/I28Bios7EfJbXvUFNPzDaryJvC+Qv6D/au+s/fhOQ0+ckKbEI/0Aj7GPaUeMQZzLg+X6l
[2]+  Stopped                 git diff Branch2...main

itsacheckmate@itsacheckmate:~/Training-Repository$ git diff Branch2 main ./git1
diff --git a/git1 b/git1
deleted file mode 100644
index 95a45bb..0000000
--- a/git1
+++ /dev/null
@@ -1 +0,0 @@
-Learning different diff commands.

itsacheckmate@itsacheckmate:~/Training-Repository$ git stash apply
On branch Branch2
Your branch is ahead of 'origin/Branch2' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   GitPractice

no changes added to commit (use "git add" and/or "git commit -a")
itsacheckmate@itsacheckmate:~/Training-Repository$ git stash pop
error: Your local changes to the following files would be overwritten by merge:
	GitPractice
Please commit your changes or stash them before you merge.
Aborting
On branch Branch2
Your branch is ahead of 'origin/Branch2' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   GitPractice

no changes added to commit (use "git add" and/or "git commit -a")
The stash entry is kept in case you need it again.










$ git reflog
6fb3790 (HEAD -> master) HEAD@{0}: reset: moving to HEAD@{2}
5e68f46 HEAD@{1}: rebase (finish): returning to refs/heads/master
5e68f46 HEAD@{2}: rebase (pick): To rebase commiting chenges

# reset the repo to The commit " To rebase commiting change "
$ git reset HEAD@{2}
Unstaged changes after reset:
This is test change

M       new.txt


====================================================

itsacheckmate@itsacheckmate:~/Training$ git branch -r
  origin/HEAD -> origin/main
  origin/main
  origin/test


itsacheckmate@itsacheckmate:~/Training$ git diff main..test
diff --git a/README.md b/README.md
index b5ddb21..628d2ea 100644
--- a/README.md
diff --git a/README.md b/README.md
index b5ddb21..628d2ea 100644
--- a/README.md
+++ b/README.md
@@ -1,6 +1,6 @@
 # Training.
 GIT
-
+PostgreSQL
 Physical Design
 https://www.youtube.com/watch?v=SnZDfD8AVkw&list=PL6XklZATqYx-ADvXHabqbffI3q2HKbUaQ&index=7
 https://www.youtube.com/watch?v=Dq2Rhd4EcV4&list=PL6XklZATqYx-ADvXHabqbffI3q2HKbUaQ&index=8
diff --git a/session_cmds b/session_cmds
index ea591f4..1d3153f 100644
--- a/session_cmds
+++ b/session_cmds
@@ -1,4 +1,6 @@
 Linux CMDs
 Github CMDs
 
-changes in main branch
+
+adding something
+

[1]+  Stopped                 git diff main..test
itsacheckmate@itsacheckmate:~/Training$ git diff main...test
diff --git a/session_cmds b/session_cmds
index d57816b..1d3153f 100644
--- a/session_cmds
+++ b/session_cmds
@@ -1,2 +1,6 @@
 Linux CMDs
-Github CMDs
\ No newline at end of file
+Github CMDs
+
+
+adding something
+


## To see difference between staged and commit
itsacheckmate@itsacheckmate:~/Training$ git diff --cached
diff --git a/git/GIT b/git/GIT
index 1144a1c..87b22de 100644
--- a/git/GIT
+++ b/git/GIT
@@ -732,3 +732,57 @@ Unstaged changes after reset:
 This is test change
 
 M       new.txt
+
+
+====================================================
+
+itsacheckmate@itsacheckmate:~/Training$ git branch -r
+  origin/HEAD -> origin/main
+  origin/main
+  origin/test
+
+
+itsacheckmate@itsacheckmate:~/Training$ git diff main..test
+diff --git a/README.md b/README.md
+index b5ddb21..628d2ea 100644
+--- a/README.md
+diff --git a/README.md b/README.md

[2]+  Stopped                 git diff --cached


See difference between files in branches
itsacheckmate@itsacheckmate:~/Training$ git diff main test ./README.md
diff --git a/README.md b/README.md
index b5ddb21..628d2ea 100644
--- a/README.md
+++ b/README.md
@@ -1,6 +1,6 @@
 # Training.
 GIT
-
+PostgreSQL
 Physical Design
 https://www.youtube.com/watch?v=SnZDfD8AVkw&list=PL6XklZATqYx-ADvXHabqbffI3q2HKbUaQ&index=7
 https://www.youtube.com/watch?v=Dq2Rhd4EcV4&list=PL6XklZATqYx-ADvXHabqbffI3q2HKbUaQ&index=8

itsacheckmate@itsacheckmate:~/Training$ git status -v
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	modified:   git/GIT

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   git/GIT

diff --git a/git/GIT b/git/GIT
index 1144a1c..87b22de 100644
--- a/git/GIT
+++ b/git/GIT
@@ -732,3 +732,57 @@ Unstaged changes after reset:
 This is test change
 
 M       new.txt
+
+
+====================================================
+
+itsacheckmate@itsacheckmate:~/Training$ git branch -r
+  origin/HEAD -> origin/main
+  origin/main
+  origin/test
+
+
+itsacheckmate@itsacheckmate:~/Training$ git diff main..test
+diff --git a/README.md b/README.md
+index b5ddb21..628d2ea 100644
+--- a/README.md
+diff --git a/README.md b/README.md
+index b5ddb21..628d2ea 100644
+--- a/README.md
++++ b/README.md
+@@ -1,6 +1,6 @@
+ # Training.
+ GIT
+-
++PostgreSQL
+ Physical Design
+ https://www.youtube.com/watch?v=SnZDfD8AVkw&list=PL6XklZATqYx-ADvXHabqbffI3q2HKbUaQ&index=7
+ https://www.youtube.com/watch?v=Dq2Rhd4EcV4&list=PL6XklZATqYx-ADvXHabqbffI3q2HKbUaQ&index=8
+diff --git a/session_cmds b/session_cmds
+index ea591f4..1d3153f 100644
+--- a/session_cmds
++++ b/session_cmds
+@@ -1,4 +1,6 @@
+ Linux CMDs
+ Github CMDs
+ 
+-changes in main branch
++
++adding something
++
+
+[1]+  Stopped                 git diff main..test
+itsacheckmate@itsacheckmate:~/Training$ git diff main...test
+diff --git a/session_cmds b/session_cmds
+index d57816b..1d3153f 100644
+--- a/session_cmds
++++ b/session_cmds
+@@ -1,2 +1,6 @@
+ Linux CMDs
+-Github CMDs
+\ No newline at end of file
++Github CMDs
++
++
++adding something
++


Git Stash 

itsacheckmate@itsacheckmate:~/Training$ git stash apply
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   git/GIT

no changes added to commit (use "git add" and/or "git commit -a")
itsacheckmate@itsacheckmate:~/Training$ git stash list
stash@{0}: WIP on main: 45074c7 adding in main branchnew


$ git config --global alias.co checkout
$ git config --global alias.br branch
$ git config --global alias.ci commit
$ git config --global alias.st status
git Alias
itsacheckmate@itsacheckmate:~/Training$ git config --global alias.co checkout
itsacheckmate@itsacheckmate:~/Training$ git config --global alias.br branch
itsacheckmate@itsacheckmate:~/Training$ git config --global alias.ci commit
itsacheckmate@itsacheckmate:~/Training$ git config --global alias.st status
itsacheckmate@itsacheckmate:~/Training$ git br
* main
  new
  test
itsacheckmate@itsacheckmate:~/Training$ git st
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   git/GIT

no changes added to commit (use "git add" and/or "git commit -a")
itsacheckmate@itsacheckmate:~/Training$ git co
M	git/GIT
Your branch is up to date with 'origin/main'.
itsacheckmate@itsacheckmate:~/Training$ git ci
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   git/GIT

no changes added to commit (use "git add" and/or "git commit -a")


$ git config --global alias.last 'log -1 HEAD'
itsacheckmate@itsacheckmate:~/Training$ git config --global alias.last 'log -1 HEAD'
itsacheckmate@itsacheckmate:~/Training$ git last
commit 45074c79a136ce889865031d8b3ba81214b76a21 (HEAD -> main, origin/main, origin/HEAD, new)
Author: Shubham Jain <shubhamjain0197@gmail.com>
Date:   Thu Apr 21 17:03:13 2022 +0530

    adding in main branchnew


itsacheckmate@itsacheckmate:~/Training$ git commit -m "Practiced Git diff,alias,stash,status  and their different uses"
[main b6af2e5] Practiced Git diff,alias,stash,status  and their different uses
 1 file changed, 239 insertions(+)
itsacheckmate@itsacheckmate:~/Training$ git push
To github.com:Shubham0197/Training.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'github.com:Shubham0197/Training.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
itsacheckmate@itsacheckmate:~/Training$ git branch
* main
  new
  test
itsacheckmate@itsacheckmate:~/Training$ git pull
remote: Enumerating objects: 44, done.
remote: Counting objects: 100% (39/39), done.
remote: Compressing objects: 100% (20/20), done.
remote: Total 32 (delta 15), reused 26 (delta 10), pack-reused 0
Unpacking objects: 100% (32/32), 3.53 KiB | 904.00 KiB/s, done.
From github.com:Shubham0197/Training
   45074c7..1a010c9  main       -> origin/main
   abdbf9f..9c14996  test       -> origin/test
hint: You have divergent branches and need to specify how to reconcile them.
hint: You can do so by running one of the following commands sometime before
hint: your next pull:
hint: 
hint:   git config pull.rebase false  # merge
hint:   git config pull.rebase true   # rebase
hint:   git config pull.ff only       # fast-forward only
hint: 
hint: You can replace "git config" with "git config --global" to set a default
hint: preference for all repositories. You can also pass --rebase, --no-rebase,
hint: or --ff-only on the command line to override the configured default per
hint: invocation.
fatal: Need to specify how to reconcile divergent branches.
itsacheckmate@itsacheckmate:~/Training$ git merge test
Auto-merging session_cmds
CONFLICT (content): Merge conflict in session_cmds
Automatic merge failed; fix conflicts and then commit the result.




Resolving merge conflicts:
itsacheckmate@itsacheckmate:~$ git config --global alias.co checkout
itsacheckmate@itsacheckmate:~$ git config --global alias.br branch
itsacheckmate@itsacheckmate:~$ git config --global alias.ci commit
itsacheckmate@itsacheckmate:~$ git config --global alias.st status
itsacheckmate@itsacheckmate:~$ git st
fatal: not a git repository (or any of the parent directories): .git
itsacheckmate@itsacheckmate:~$ cd Training-Repository/
itsacheckmate@itsacheckmate:~/Training-Repository$ git st
On branch Branch2
Your branch is ahead of 'origin/Branch2' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   GitPractice

no changes added to commit (use "git add" and/or "git commit -a")
itsacheckmate@itsacheckmate:~/Training-Repository$ git checkout
M	GitPractice
Your branch is ahead of 'origin/Branch2' by 1 commit.
  (use "git push" to publish your local commits)
itsacheckmate@itsacheckmate:~/Training-Repository$ git stash 
Saved working directory and index state WIP on Branch2: 468484b Added new file named git1
itsacheckmate@itsacheckmate:~/Training-Repository$ git stash pop
On branch Branch2
Your branch is ahead of 'origin/Branch2' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   GitPractice

no changes added to commit (use "git add" and/or "git commit -a")
Dropped refs/stash@{0} (4c1dd65a032be924650b0a591b8429d77acf73f2)
itsacheckmate@itsacheckmate:~/Training-Repository$ git stash apply
error: Your local changes to the following files would be overwritten by merge:
	GitPractice
Please commit your changes or stash them before you merge.
Aborting
On branch Branch2
Your branch is ahead of 'origin/Branch2' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   GitPractice

no changes added to commit (use "git add" and/or "git commit -a")
itsacheckmate@itsacheckmate:~/Training-Repository$ git stash apply
error: Your local changes to the following files would be overwritten by merge:
	GitPractice
Please commit your changes or stash them before you merge.
Aborting
On branch Branch2
Your branch is ahead of 'origin/Branch2' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   GitPractice
	modified:   git1

no changes added to commit (use "git add" and/or "git commit -a")
itsacheckmate@itsacheckmate:~/Training-Repository$ git status -v
On branch Branch2
Your branch is ahead of 'origin/Branch2' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   GitPractice
	modified:   git1

no changes added to commit (use "git add" and/or "git commit -a")
itsacheckmate@itsacheckmate:~/Training-Repository$ git add .
itsacheckmate@itsacheckmate:~/Training-Repository$ git status -v
On branch Branch2
Your branch is ahead of 'origin/Branch2' by 1 commit.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	modified:   GitPractice
	modified:   git1

diff --git a/GitPractice b/GitPractice
index 3bb9f99..c3368ba 100644
--- a/GitPractice
+++ b/GitPractice
@@ -102,4 +102,345 @@ index 0000000..0c99ef2
 +<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="834px" height="960px" viewBox="-0.5 -0.5 834 960" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2022-04-14T15:59:22.372Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36&quot; etag=&quot;CUvm_jUffuSygKY14HD_&quot; version=&quot;17.4.3&quot; type=&quot;github&quot;&gt;&lt;diagram id=&quot;Iy3N-nfoCOLkDRjxHkdD&quot; name=&quot;Page-1&quot;&gt;7Z1fc5s4EMA/TWZ6D84g8cfmMbbbNHdNkyZtepcXDzGKzRWQD8uN6ac/ARIGpDiOweDcqdNpjQBZ6Le7Wq0W+UQfBevzyFnML7GL/BOouesTfXwCIYDWgP6XlMRZyWAAs4JZ5LlZkbYpuPV+IXYnL115LlqWLiQY+8RbsEKQFU5xGKIpKV3oRBF+Kl/2iH23VLBwZqh0U1JwO3V8JFz23XPJnD0F7G/KPyJvNmffDIBlZ2cenOmPWYRXIfu+E6g/pn+y04HD62Lfu5w7Ln4qFOnvT/RRhDHJPgXrEfKTvi1324dnzubtjlBIdrrh6zdyPev/bUxsbXU5+di/uxv2AGT4fjr+ivXIGNFKSZBUO4InZ7z5JOZdtnzyAt8J6dHwEYfklp3R6PF07vnuJyfGq6RNS0L7iB8N5zjyftHrHZ+eArSAno4Ikwhola64Te5kdUZoSa+55g8KKkWXzrp04SdnSXhrsO87i6X3kLYvuTFwopkXDjEhOGAXOb43C+nnKa0LRfyZslYBgx6LHc36/ieKCFoXiljHnyMcIBLF9BJ2tmeY2S1MSXpAZ3U8bWQOWEZWNi/I28Bios7EfJbXvUFNPzDaryJvC+Qv6D/au+s/fhOQ0+ckKbEI/0Aj7GPaUeMQZzLg+X6l
 [2]+  Stopped                 git diff Branch2...main
 
+itsacheckmate@itsacheckmate:~/Training-Repository$ git diff Branch2 main ./git1
+diff --git a/git1 b/git1
+deleted file mode 100644
+index 95a45bb..0000000
+--- a/git1
++++ /dev/null
+@@ -1 +0,0 @@
+-Learning different diff commands.
+
+itsacheckmate@itsacheckmate:~/Training-Repository$ git stash apply
+On branch Branch2
+Your branch is ahead of 'origin/Branch2' by 1 commit.
+  (use "git push" to publish your local commits)
+
+Changes not staged for commit:
+  (use "git add <file>..." to update what will be committed)
+  (use "git restore <file>..." to discard changes in working directory)
+	modified:   GitPractice
+
+no changes added to commit (use "git add" and/or "git commit -a")
+itsacheckmate@itsacheckmate:~/Training-Repository$ git stash pop
+error: Your local changes to the following files would be overwritten by merge:
+	GitPractice
+Please commit your changes or stash them before you merge.
+Aborting
+On branch Branch2
+Your branch is ahead of 'origin/Branch2' by 1 commit.
+  (use "git push" to publish your local commits)
+
+Changes not staged for commit:
+  (use "git add <file>..." to update what will be committed)
+  (use "git restore <file>..." to discard changes in working directory)
+	modified:   GitPractice
+
+no changes added to commit (use "git add" and/or "git commit -a")
+The stash entry is kept in case you need it again.
+
+
+
+
+
+
+
+
+
+
+$ git reflog
+6fb3790 (HEAD -> master) HEAD@{0}: reset: moving to HEAD@{2}
+5e68f46 HEAD@{1}: rebase (finish): returning to refs/heads/master
+5e68f46 HEAD@{2}: rebase (pick): To rebase commiting chenges
+
+# reset the repo to The commit " To rebase commiting change "
+$ git reset HEAD@{2}
+Unstaged changes after reset:
+This is test change
+
+M       new.txt
+
+
+====================================================
+
+itsacheckmate@itsacheckmate:~/Training$ git branch -r
+  origin/HEAD -> origin/main
+  origin/main
+  origin/test
+
+
+itsacheckmate@itsacheckmate:~/Training$ git diff main..test
+diff --git a/README.md b/README.md
+index b5ddb21..628d2ea 100644
+--- a/README.md
+diff --git a/README.md b/README.md
+index b5ddb21..628d2ea 100644
+--- a/README.md
++++ b/README.md
+@@ -1,6 +1,6 @@
+ # Training.
+ GIT
+-
++PostgreSQL
+ Physical Design
+ https://www.youtube.com/watch?v=SnZDfD8AVkw&list=PL6XklZATqYx-ADvXHabqbffI3q2HKbUaQ&index=7
+ https://www.youtube.com/watch?v=Dq2Rhd4EcV4&list=PL6XklZATqYx-ADvXHabqbffI3q2HKbUaQ&index=8
+diff --git a/session_cmds b/session_cmds
+index ea591f4..1d3153f 100644
+--- a/session_cmds
++++ b/session_cmds
+@@ -1,4 +1,6 @@
+ Linux CMDs
+ Github CMDs
+ 
+-changes in main branch
++
++adding something
++
+
+[1]+  Stopped                 git diff main..test
+itsacheckmate@itsacheckmate:~/Training$ git diff main...test
+diff --git a/session_cmds b/session_cmds
+index d57816b..1d3153f 100644
+--- a/session_cmds
++++ b/session_cmds
+@@ -1,2 +1,6 @@
+ Linux CMDs
+-Github CMDs
+\ No newline at end of file
++Github CMDs
++
++
++adding something
++
+
+
+## To see difference between staged and commit
+itsacheckmate@itsacheckmate:~/Training$ git diff --cached
+diff --git a/git/GIT b/git/GIT
+index 1144a1c..87b22de 100644
+--- a/git/GIT
++++ b/git/GIT
+@@ -732,3 +732,57 @@ Unstaged changes after reset:
+ This is test change
+ 
+ M       new.txt
++
++
++====================================================
++
++itsacheckmate@itsacheckmate:~/Training$ git branch -r
++  origin/HEAD -> origin/main
++  origin/main
++  origin/test
++
++
++itsacheckmate@itsacheckmate:~/Training$ git diff main..test
++diff --git a/README.md b/README.md
++index b5ddb21..628d2ea 100644
++--- a/README.md
++diff --git a/README.md b/README.md
+
+[2]+  Stopped                 git diff --cached
+
+
+See difference between files in branches
+itsacheckmate@itsacheckmate:~/Training$ git diff main test ./README.md
+diff --git a/README.md b/README.md
+index b5ddb21..628d2ea 100644
+--- a/README.md
++++ b/README.md
+@@ -1,6 +1,6 @@
+ # Training.
+ GIT
+-
++PostgreSQL
+ Physical Design
+ https://www.youtube.com/watch?v=SnZDfD8AVkw&list=PL6XklZATqYx-ADvXHabqbffI3q2HKbUaQ&index=7
+ https://www.youtube.com/watch?v=Dq2Rhd4EcV4&list=PL6XklZATqYx-ADvXHabqbffI3q2HKbUaQ&index=8
+
+itsacheckmate@itsacheckmate:~/Training$ git status -v
+On branch main
+Your branch is up to date with 'origin/main'.
+
+Changes to be committed:
+  (use "git restore --staged <file>..." to unstage)
+	modified:   git/GIT
+
+Changes not staged for commit:
+  (use "git add <file>..." to update what will be committed)
+  (use "git restore <file>..." to discard changes in working directory)
+	modified:   git/GIT
+
+diff --git a/git/GIT b/git/GIT
+index 1144a1c..87b22de 100644
+--- a/git/GIT
++++ b/git/GIT
+@@ -732,3 +732,57 @@ Unstaged changes after reset:
+ This is test change
+ 
+ M       new.txt
++
++
++====================================================
++
++itsacheckmate@itsacheckmate:~/Training$ git branch -r
++  origin/HEAD -> origin/main
++  origin/main
++  origin/test
++
++
++itsacheckmate@itsacheckmate:~/Training$ git diff main..test
++diff --git a/README.md b/README.md
++index b5ddb21..628d2ea 100644
++--- a/README.md
++diff --git a/README.md b/README.md
++index b5ddb21..628d2ea 100644
++--- a/README.md
+++++ b/README.md
++@@ -1,6 +1,6 @@
++ # Training.
++ GIT
++-
+++PostgreSQL
++ Physical Design
++ https://www.youtube.com/watch?v=SnZDfD8AVkw&list=PL6XklZATqYx-ADvXHabqbffI3q2HKbUaQ&index=7
++ https://www.youtube.com/watch?v=Dq2Rhd4EcV4&list=PL6XklZATqYx-ADvXHabqbffI3q2HKbUaQ&index=8
++diff --git a/session_cmds b/session_cmds
++index ea591f4..1d3153f 100644
++--- a/session_cmds
+++++ b/session_cmds
++@@ -1,4 +1,6 @@
++ Linux CMDs
++ Github CMDs
++ 
++-changes in main branch
+++
+++adding something
+++
++
++[1]+  Stopped                 git diff main..test
++itsacheckmate@itsacheckmate:~/Training$ git diff main...test
++diff --git a/session_cmds b/session_cmds
++index d57816b..1d3153f 100644
++--- a/session_cmds
+++++ b/session_cmds
++@@ -1,2 +1,6 @@
++ Linux CMDs
++-Github CMDs
++\ No newline at end of file
+++Github CMDs
+++
+++
+++adding something
+++
+
+
+Git Stash 
+
+itsacheckmate@itsacheckmate:~/Training$ git stash apply
+On branch main
+Your branch is up to date with 'origin/main'.
+
+Changes not staged for commit:
+  (use "git add <file>..." to update what will be committed)
+  (use "git restore <file>..." to discard changes in working directory)
+	modified:   git/GIT
+
+no changes added to commit (use "git add" and/or "git commit -a")
+itsacheckmate@itsacheckmate:~/Training$ git stash list
+stash@{0}: WIP on main: 45074c7 adding in main branchnew
+
+
+$ git config --global alias.co checkout
+$ git config --global alias.br branch
+$ git config --global alias.ci commit
+$ git config --global alias.st status
+git Alias
+itsacheckmate@itsacheckmate:~/Training$ git config --global alias.co checkout
+itsacheckmate@itsacheckmate:~/Training$ git config --global alias.br branch
+itsacheckmate@itsacheckmate:~/Training$ git config --global alias.ci commit
+itsacheckmate@itsacheckmate:~/Training$ git config --global alias.st status
+itsacheckmate@itsacheckmate:~/Training$ git br
+* main
+  new
+  test
+itsacheckmate@itsacheckmate:~/Training$ git st
+On branch main
+Your branch is up to date with 'origin/main'.
+
+Changes not staged for commit:
+  (use "git add <file>..." to update what will be committed)
+  (use "git restore <file>..." to discard changes in working directory)
+	modified:   git/GIT
+
+no changes added to commit (use "git add" and/or "git commit -a")
+itsacheckmate@itsacheckmate:~/Training$ git co
+M	git/GIT
+Your branch is up to date with 'origin/main'.
+itsacheckmate@itsacheckmate:~/Training$ git ci
+On branch main
+Your branch is up to date with 'origin/main'.
+
+Changes not staged for commit:
+  (use "git add <file>..." to update what will be committed)
+  (use "git restore <file>..." to discard changes in working directory)
+	modified:   git/GIT
+
+no changes added to commit (use "git add" and/or "git commit -a")
+
+
+$ git config --global alias.last 'log -1 HEAD'
+itsacheckmate@itsacheckmate:~/Training$ git config --global alias.last 'log -1 HEAD'
+itsacheckmate@itsacheckmate:~/Training$ git last
+commit 45074c79a136ce889865031d8b3ba81214b76a21 (HEAD -> main, origin/main, origin/HEAD, new)
+Author: Shubham Jain <shubhamjain0197@gmail.com>
+Date:   Thu Apr 21 17:03:13 2022 +0530
+
+    adding in main branchnew
+
+
+itsacheckmate@itsacheckmate:~/Training$ git commit -m "Practiced Git diff,alias,stash,status  and their different uses"
+[main b6af2e5] Practiced Git diff,alias,stash,status  and their different uses
+ 1 file changed, 239 insertions(+)
+itsacheckmate@itsacheckmate:~/Training$ git push
+To github.com:Shubham0197/Training.git
+ ! [rejected]        main -> main (fetch first)
+error: failed to push some refs to 'github.com:Shubham0197/Training.git'
+hint: Updates were rejected because the remote contains work that you do
+hint: not have locally. This is usually caused by another repository pushing
+hint: to the same ref. You may want to first integrate the remote changes
+hint: (e.g., 'git pull ...') before pushing again.
+hint: See the 'Note about fast-forwards' in 'git push --help' for details.
+itsacheckmate@itsacheckmate:~/Training$ git branch
+* main
+  new
+  test
+itsacheckmate@itsacheckmate:~/Training$ git pull
+remote: Enumerating objects: 44, done.
+remote: Counting objects: 100% (39/39), done.
+remote: Compressing objects: 100% (20/20), done.
+remote: Total 32 (delta 15), reused 26 (delta 10), pack-reused 0
+Unpacking objects: 100% (32/32), 3.53 KiB | 904.00 KiB/s, done.
+From github.com:Shubham0197/Training
+   45074c7..1a010c9  main       -> origin/main
+   abdbf9f..9c14996  test       -> origin/test
+hint: You have divergent branches and need to specify how to reconcile them.
+hint: You can do so by running one of the following commands sometime before
+hint: your next pull:
+hint: 
+hint:   git config pull.rebase false  # merge
+hint:   git config pull.rebase true   # rebase
+hint:   git config pull.ff only       # fast-forward only
+hint: 
+hint: You can replace "git config" with "git config --global" to set a default
+hint: preference for all repositories. You can also pass --rebase, --no-rebase,
+hint: or --ff-only on the command line to override the configured default per
+hint: invocation.
+fatal: Need to specify how to reconcile divergent branches.
+itsacheckmate@itsacheckmate:~/Training$ git merge test
+Auto-merging session_cmds
+CONFLICT (content): Merge conflict in session_cmds
+Automatic merge failed; fix conflicts and then commit the result.
+
 
diff --git a/git1 b/git1
index 95a45bb..bb77d95 100644
--- a/git1
+++ b/git1
@@ -1 +1,2 @@
 Learning different diff commands.
+Applying git stash
itsacheckmate@itsacheckmate:~/Training-Repository$ git commit -m 'Learning stash'
[Branch2 d54c448] Learning stash
 2 files changed, 342 insertions(+)
itsacheckmate@itsacheckmate:~/Training-Repository$ git status -v
On branch Branch2
Your branch is ahead of 'origin/Branch2' by 2 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
itsacheckmate@itsacheckmate:~/Training-Repository$ git stash 
No local changes to save
itsacheckmate@itsacheckmate:~/Training-Repository$ git stash 
No local changes to save
itsacheckmate@itsacheckmate:~/Training-Repository$ git add .
itsacheckmate@itsacheckmate:~/Training-Repository$ git status -v
On branch Branch2
Your branch is ahead of 'origin/Branch2' by 2 commits.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	modified:   git1

diff --git a/git1 b/git1
index bb77d95..412f108 100644
--- a/git1
+++ b/git1
@@ -1,2 +1,8 @@
 Learning different diff commands.
 Applying git stash
+
+
+
+
+
+I have made two new stash in my file.
itsacheckmate@itsacheckmate:~/Training-Repository$ git stash list
stash@{0}: WIP on Branch2: 468484b Added new file named git1
stash@{1}: WIP on main: d708a92 Practising linux commands
itsacheckmate@itsacheckmate:~/Training-Repository$ git rm --cached
fatal: No pathspec was given. Which files should I remove?
itsacheckmate@itsacheckmate:~/Training-Repository$ git rm --cached git1
rm 'git1'
itsacheckmate@itsacheckmate:~/Training-Repository$ git stash 
Saved working directory and index state WIP on Branch2: d54c448 Learning stash
itsacheckmate@itsacheckmate:~/Training-Repository$ git status -v
On branch Branch2
Your branch is ahead of 'origin/Branch2' by 2 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
itsacheckmate@itsacheckmate:~/Training-Repository$ git stash apply stash@{1}
Auto-merging GitPractice
CONFLICT (content): Merge conflict in GitPractice
On branch Branch2
Your branch is ahead of 'origin/Branch2' by 2 commits.
  (use "git push" to publish your local commits)

Unmerged paths:
  (use "git restore --staged <file>..." to unstage)
  (use "git add <file>..." to mark resolution)
	both modified:   GitPractice

no changes added to commit (use "git add" and/or "git commit -a")
itsacheckmate@itsacheckmate:~/Training-Repository$ git add .
itsacheckmate@itsacheckmate:~/Training-Repository$ git stash apply stash@{1}
Auto-merging GitPractice
CONFLICT (content): Merge conflict in GitPractice
On branch Branch2
Your branch is ahead of 'origin/Branch2' by 2 commits.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	modified:   git1

Unmerged paths:
  (use "git restore --staged <file>..." to unstage)
  (use "git add <file>..." to mark resolution)
	both modified:   GitPractice

itsacheckmate@itsacheckmate:~/Training-Repository$ git commit -m 'Conflict resolved which occured due to stash'
U	GitPractice
error: Committing is not possible because you have unmerged files.
hint: Fix them up in the work tree, and then use 'git add/rm <file>'
hint: as appropriate to mark resolution and make a commit.
fatal: Exiting because of an unresolved conflict.
itsacheckmate@itsacheckmate:~/Training-Repository$ git branch
* Branch2
  main
itsacheckmate@itsacheckmate:~/Training-Repository$ git pull 
error: Pulling is not possible because you have unmerged files.
hint: Fix them up in the work tree, and then use 'git add/rm <file>'
hint: as appropriate to mark resolution and make a commit.
fatal: Exiting because of an unresolved conflict.
itsacheckmate@itsacheckmate:~/Training-Repository$ git commit -m 'Conflict resolved which occured due to stash'
U	GitPractice
error: Committing is not possible because you have unmerged files.
hint: Fix them up in the work tree, and then use 'git add/rm <file>'
hint: as appropriate to mark resolution and make a commit.
fatal: Exiting because of an unresolved conflict.
itsacheckmate@itsacheckmate:~/Training-Repository$ git add .
itsacheckmate@itsacheckmate:~/Training-Repository$ git commit -m 'Conflict resolved which occured due to stash'
[Branch2 14577e6] Conflict resolved which occured due to stash
 2 files changed, 9 insertions(+)
itsacheckmate@itsacheckmate:~/Training-Repository$ git stash apply
On branch Branch2
Your branch is ahead of 'origin/Branch2' by 3 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
itsacheckmate@itsacheckmate:~/Training-Repository$ git stash apply stash@{2}
CONFLICT (modify/delete): new.txt deleted in Updated upstream and modified in Stashed changes. Version Stashed changes of new.txt left in tree.
CONFLICT (modify/delete): linux/linux deleted in Updated upstream and modified in Stashed changes. Version Stashed changes of linux/linux left in tree.
On branch Branch2
Your branch is ahead of 'origin/Branch2' by 3 commits.
  (use "git push" to publish your local commits)

Unmerged paths:
  (use "git restore --staged <file>..." to unstage)
  (use "git add/rm <file>..." as appropriate to mark resolution)
	deleted by us:   linux/linux
	deleted by us:   new.txt

no changes added to commit (use "git add" and/or "git commit -a")
itsacheckmate@itsacheckmate:~/Training-Repository$ git stash apply stash@{0}
linux/linux: needs merge
new.txt: needs merge
itsacheckmate@itsacheckmate:~/Training-Repository$ git add .
itsacheckmate@itsacheckmate:~/Training-Repository$ git commit -am 'Adding linux and new.txt file in stash'
[Branch2 e9c4211] Adding linux and new.txt file in stash
 2 files changed, 74 insertions(+)
 create mode 100644 linux/linux
 create mode 100644 new.txt
itsacheckmate@itsacheckmate:~/Training-Repository$ git stash apply stash@{0}
On branch Branch2
Your branch is ahead of 'origin/Branch2' by 4 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
itsacheckmate@itsacheckmate:~/Training-Repository$ git stash apply stash@{0}
On branch Branch2
Your branch is ahead of 'origin/Branch2' by 4 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
itsacheckmate@itsacheckmate:~/Training-Repository$ 

Git Rebase:
itsacheckmate@itsacheckmate:~/Training-Repository$ git commit -am 'Committing all the unsaved changes to practise rebase commands.'
[Branch2 1c370c3] Committing all the unsaved changes to practise rebase commands.
 2 files changed, 788 insertions(+)
 create mode 100644 gitcheatsheet
itsacheckmate@itsacheckmate:~/Training-Repository$ git rebase main
Auto-merging linux/linux
CONFLICT (add/add): Merge conflict in linux/linux
Auto-merging new.txt
CONFLICT (add/add): Merge conflict in new.txt
error: could not apply e9c4211... Adding linux and new.txt file in stash
hint: Resolve all conflicts manually, mark them as resolved with
hint: "git add/rm <conflicted_files>", then run "git rebase --continue".
hint: You can instead skip this commit: run "git rebase --skip".
hint: To abort and get back to the state before "git rebase", run "git rebase --abort".
Could not apply e9c4211... Adding linux and new.txt file in stash
itsacheckmate@itsacheckmate:~/Training-Repository$ git add .
itsacheckmate@itsacheckmate:~/Training-Repository$ git rebase --continue
[detached HEAD 043f5be] Adding linux and new.txt file in stash
 2 files changed, 3 insertions(+), 3 deletions(-)
Successfully rebased and updated refs/heads/Branch2.
itsacheckmate@itsacheckmate:~/Training-Repository$ git log
commit 0a03b3b1208623c312975a64348117152378bc43 (HEAD -> Branch2)
Author: Mahima Tewatia <mahima.tewatia@itsacheckmate.com>
Date:   Fri Apr 22 14:13:21 2022 +0530

    Committing all the unsaved changes to practise rebase commands.

commit 043f5be188d17ad3d47b3a107c55cfcc276c2bd3
Author: Mahima Tewatia <mahima.tewatia@itsacheckmate.com>
Date:   Fri Apr 22 12:43:16 2022 +0530

    Adding linux and new.txt file in stash

commit 1ecd30de6188e2338cc088ccbb6f873854433a5d
Author: Mahima Tewatia <mahima.tewatia@itsacheckmate.com>
Date:   Fri Apr 22 12:38:50 2022 +0530

    Conflict resolved which occured due to stash

commit f00ac4ca91bbb17c9d5e274f145b2545fff1af4b
Author: Mahima Tewatia <mahima.tewatia@itsacheckmate.com>
Date:   Fri Apr 22 12:23:59 2022 +0530


[2]+  Stopped                 git log





