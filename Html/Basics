HTML is the standard markup language for creating Web pages.

HTML stands for Hyper Text Markup Language
HTML is the standard markup language for creating Web pages
HTML describes the structure of a Web page
HTML consists of a series of elements
HTML elements tell the browser how to display the content
HTML elements label pieces of content such as "this is a heading", "this is a paragraph", "this is a link", etc.

The <!DOCTYPE html> declaration defines that this document is an HTML5 document
The <html> element is the root element of an HTML page
The <head> element contains meta information about the HTML page
The <title> element specifies a title for the HTML page (which is shown in the browser's title bar or in the page's tab)
The <body> element defines the document's body, and is a container for all the visible contents, such as headings, paragraphs, images, hyperlinks, tables, lists, etc.
The <h1> element defines a large heading
The <p> element defines a paragraph

An HTML element is defined by a start tag, some content, and an end tag:

<tagname> Content goes here... </tagname>
The HTML element is everything from the start tag to the end tag:

<h1>My First Heading</h1>
<p>My first paragraph.</p>

Start tag	         Element content	                  End tag
<h1>	            My First Heading	                   </h1>
<p>	              My first paragraph.	                 </p>
<br>	               none	                             none

Note: Some HTML elements have no content (like the <br> element). These elements are called empty elements. 
Empty elements do not have an end tag!


Web Browsers
The purpose of a web browser (Chrome, Edge, Firefox, Safari) is to read HTML documents and display them correctly.
A browser does not display the HTML tags, but uses them to determine how to display the document:


HTML Page Structure
Below is a visualization of an HTML page structure:

<html>
<head>
<title>Page title</title>
</head>
<body>
  <h1>This is a heading</h1>
  <p>This is a paragraph.</p>
  <p>This is another paragraph.</p>
</body>
</html>

Note: The content inside the <body> section (the white area above) will be displayed in a browser. 
The content inside the <title> element will be shown in the browser's title bar or in the page's tab.


# HTML Formatting Elements:
Formatting elements were designed to display special types of text:

<b> - Bold text
<strong> - Important text
<i> - Italic text
<em> - Emphasized text
<mark> - Marked text
<small> - Smaller text
<del> - Deleted text
<ins> - Inserted text
<sub> - Subscript text
<sup> - Superscript text

# HTML <b> and <strong> Elements:
The HTML <b> element defines bold text, without any extra importance.
The HTML <strong> element defines text with strong importance. The content inside is typically displayed in bold.

HTML <i> and <em> Elements
The HTML <i> element defines a part of text in an alternate voice or mood. The content inside is typically displayed in italic.
Tip: The <i> tag is often used to indicate a technical term, a phrase from another language, a thought, a ship name, etc.
The HTML <em> element defines emphasized text. The content inside is typically displayed in italic.

# HTML <small> Element
The HTML <small> element defines smaller text:

# HTML <mark> Element
The HTML <mark> element defines text that should be marked or highlighted:

# HTML <del> Element
The HTML <del> element defines text that has been deleted from a document. Browsers will usually strike a line through deleted text:

# HTML <ins> Element
The HTML <ins> element defines a text that has been inserted into a document. Browsers will usually underline inserted text:

# HTML <sub> Element
The HTML <sub> element defines subscript text. Subscript text appears half a character below the normal line, and is sometimes rendered in a smaller font. 
Subscript text can be used for chemical formulas, like H2O:

# HTML <sup> Element
The HTML <sup> element defines superscript text. Superscript text appears half a character above the normal line, and is sometimes rendered in a smaller font. 
Superscript text can be used for footnotes, like WWW[1]:

HTML Text Formatting Elements:
Tag	                         Description
<b>	                       Defines bold text
<em>	                     Defines emphasized text 
<i>	                       Defines a part of text in an alternate voice or mood
<small>	                   Defines smaller text
<strong>	                 Defines important text
<sub>	                     Defines subscripted text
<sup>	                     Defines superscripted text
<ins>	                     Defines inserted text
<del>	                     Defines deleted text
<mark>	                   Defines marked/highlighted text


# HTML <blockquote> for Quotations
The HTML <blockquote> element defines a section that is quoted from another source.
Browsers usually indent <blockquote> elements.

# HTML <q> for Short Quotations
The HTML <q> tag defines a short quotation.
Browsers normally insert quotation marks around the quotation.

# HTML <abbr> for Abbreviations
The HTML <abbr> tag defines an abbreviation or an acronym, like "HTML", "CSS", "Mr.", "Dr.", "ASAP", "ATM".
Marking abbreviations can give useful information to browsers, translation systems and search-engines.
Tip: Use the global title attribute to show the description for the abbreviation/acronym when you mouse over the element. 

# HTML <address> for Contact Information
The HTML <address> tag defines the contact information for the author/owner of a document or an article.
The contact information can be an email address, URL, physical address, phone number, social media handle, etc.
The text in the <address> element usually renders in italic, and browsers will always add a line break before and after the <address> element.

# HTML <cite> for Work Title
The HTML <cite> tag defines the title of a creative work (e.g. a book, a poem, a song, a movie, a painting, a sculpture, etc.).
Note: A person's name is not the title of a work.
The text in the <cite> element usually renders in italic.

# HTML <bdo> for Bi-Directional Override
BDO stands for Bi-Directional Override.
The HTML <bdo> tag is used to override the current text direction:

HTML Quotation and Citation Elements
Tag	                Description
<abbr>	            Defines an abbreviation or acronym
<address>	          Defines contact information for the author/owner of a document
<bdo>	              Defines the text direction
<blockquote>	      Defines a section that is quoted from another source
<cite>	              Defines the title of a work
<q>	              Defines a short inline quotation

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# HTML Comments:
HTML comments are not displayed in the browser, but they can help document your HTML source code.

HTML Comment Tag
You can add comments to your HTML source by using the following syntax:
<!-- Write your comments here -->
Notice that there is an exclamation point (!) in the start tag, but not in the end tag.

Note: Comments are not displayed by the browser, but they can help document your HTML source code.


# Hide Content
Comments can be used to hide content.
Which can be helpful if you hide content temporarily:

Note: You can also hide more than one line, everything between the <!-- and the --> will be hidden from the display.

# Hide Inline Content
Comments can be used to hide parts in the middle of the HTML code.


# HTML Colors:
HTML colors are specified with predefined color names, or with RGB, HEX, HSL, RGBA, or HSLA values.
In HTML, a color can be specified by using a color name:

#Text Color:
You can set the color of text:

# Border Color:
You can set the color of borders:

# Color Values
In HTML, colors can also be specified using RGB values, HEX values, HSL values, RGBA values, and HSLA values.

The following three <div> elements have their background color set with RGB, HEX, and HSL values:
rgb(255, 99, 71)
#ff6347
hsl(9, 100%, 64%)

# HTML Lists
HTML lists allow web developers to group a set of related items in lists.
Unordered HTML List
An unordered list starts with the <ul> tag. Each list item starts with the <li> tag.
The list items will be marked with bullets (small black circles) by default:
An unordered HTML list:
.Item
.Item
.Item
.Item

Ordered HTML List
An ordered list starts with the <ol> tag. Each list item starts with the <li> tag.
The list items will be marked with numbers by default:
An ordered HTML list:
1.First item
2.Second item
3.Third item
4.Fourth item

# HTML Description Lists:
HTML also supports description lists.
A description list is a list of terms, with a description of each term.
The <dl> tag defines the description list, the <dt> tag defines the term (name), and the <dd> tag describes each term:

HTML List Tags:
Tag	Description
<ul>	Defines an unordered list
<ol>	Defines an ordered list
<li>	Defines a list item
<dl>	Defines a description list
<dt>	Defines a term in a description list
<dd>	Describes the term in a description list

# Nested HTML Lists-
Lists can be nested (list inside list):

# Unordered HTML List - Choose List Item Marker
The CSS list-style-type property is used to define the style of the list item marker. It can have one of the following values:
Value	Description
disc	Sets the list item marker to a bullet (default)
circle	Sets the list item marker to a circle
square	Sets the list item marker to a square
none	The list items will not be marked

# Use the HTML <ul> element to define an unordered list
Use the CSS list-style-type property to define the list item marker
Use the HTML <li> element to define a list item
Lists can be nested
List items can contain other HTML elements
Use the CSS property float:left to display a list horizontally.

# Ordered HTML List - The Type Attribute
The type attribute of the <ol> tag, defines the type of the list item marker:
Type	        Description
type="1"	The list items will be numbered with numbers (default)
type="A"	The list items will be numbered with uppercase letters
type="a"	The list items will be numbered with lowercase letters
type="I"	The list items will be numbered with uppercase roman numbers
type="i"	The list items will be numbered with lowercase roman numbers


# Control List Counting:
By default, an ordered list will start counting from 1. If you want to start counting from a specified number, you can use the start attribute:
# Nested HTML Lists
Lists can be nested (list inside list):
Note: A list item (<li>) can contain a new list, and other HTML elements, like images and links, etc.

Use the HTML <ol> element to define an ordered list
Use the HTML type attribute to define the numbering type
Use the HTML <li> element to define a list item
Lists can be nested
List items can contain other HTML elements

# HTML Other Lists
HTML also supports description lists.
HTML Description Lists
A description list is a list of terms, with a description of each term.
The <dl> tag defines the description list, the <dt> tag defines the term (name), and the <dd> tag describes each term:

Use the HTML <dl> element to define a description list
Use the HTML <dt> element to define the description term
Use the HTML <dd> element to describe the term in a description list
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# HTML Block and Inline Elements:
Every HTML element has a default display value, depending on what type of element it is.
There are two display values: block and inline.

Block-level Elements
A block-level element always starts on a new line, and the browsers automatically add some space (a margin) before and after the element.
A block-level element always takes up the full width available (stretches out to the left and right as far as it can).

Two commonly used block elements are: <p> and <div>.
The <p> element defines a paragraph in an HTML document.
The <div> element defines a division or a section in an HTML document.

The <p> element is a block-level element.
The <div> element is a block-level element.

The P and the DIV elements are both block elements, and they will always start on a new line and take up the full width available (stretches out to the left and right as far as it can)

Here are the block-level elements in HTML:
<address> <article> <aside> <blockquote> <canvas> <dd> <div> <dl> <dt> <fieldset> <figcaption> <figure> <footer> <form> <h1>-<h6> <header> <hr> <li> <main> <nav> <noscript> <ol> <p> <pre> <section> <table> <tfoot ><ul> <video>

# Inline Elements:
An inline element does not start on a new line.
An inline element only takes up as much width as necessary.
This is a <span> element inside a paragraph.
Here are the inline elements in HTML:
<a> <abbr> <acronym> <b> <bdo> <big> <br> <button> <cite> <code> <dfn> <em> <i> <img> <input> <kbd> <label> <map> <object> <output> <q> <samp> <script> <select> <small> <span> <strong> <sub> <sup> <textarea> <time> <tt> <var>

Note: An inline element cannot contain a block-level element!

# The <div> Element:
The <div> element is often used as a container for other HTML elements.
The <div> element has no required attributes, but style, class and id are common.
When used together with CSS, the <div> element can be used to style blocks of content:

# The <span> Element:
The <span> element is an inline container used to mark up a part of a text, or a part of a document.
The <span> element has no required attributes, but style, class and id are common.
When used together with CSS, the <span> element can be used to style parts of the text:

There are two display values: block and inline
A block-level element always starts on a new line and takes up the full width available
An inline element does not start on a new line and it only takes up as much width as necessary
The <div> element is a block-level and is often used as a container for other HTML elements
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# HTML Styles - CSS:
CSS stands for Cascading Style Sheets.
CSS saves a lot of work. It can control the layout of multiple web pages all at once.

What is CSS?
Cascading Style Sheets (CSS) is used to format the layout of a webpage.
With CSS, you can control the color, font, the size of text, the spacing between elements, how elements are positioned and laid out, what background images or background colors are to be used, different displays for different devices and screen sizes, and much more!

Tip: The word cascading means that a style applied to a parent element will also apply to all children elements within the parent. So, if you set the color of the body text to "blue", all headings, paragraphs, and other text elements within the body will also get the same color (unless you specify something else)!

Using CSS
CSS can be added to HTML documents in 3 ways:
Inline - by using the style attribute inside HTML elements
Internal - by using a <style> element in the <head> section
External - by using a <link> element to link to an external CSS file
The most common way to add CSS, is to keep the styles in external CSS files.

# Inline CSS
An inline CSS is used to apply a unique style to a single HTML element.
An inline CSS uses the style attribute of an HTML element.

# Internal CSS
An internal CSS is used to define a style for a single HTML page.
An internal CSS is defined in the <head> section of an HTML page, within a <style> element.

# External CSS
An external style sheet is used to define the style for many HTML pages.
To use an external style sheet, add a link to it in the <head> section of each HTML page:
The external style sheet can be written in any text editor. The file must not contain any HTML code, and must be saved with a .css extension.
Tip: With an external style sheet, you can change the look of an entire web site, by changing one file!

# CSS Colors, Fonts and Sizes:
The CSS color property defines the text color to be used.
The CSS font-family property defines the font to be used.
The CSS font-size property defines the text size to be used.

# CSS Border:
The CSS border property defines a border around an HTML element.
Tip: You can define a border for nearly all HTML elements.

# CSS Padding:
The CSS padding property defines a padding (space) between the text and the border.

# CSS Margin:
The CSS margin property defines a margin (space) outside the border.

# Link to External CSS
External style sheets can be referenced with a full URL or with a path relative to the current web page.

Use the HTML style attribute for inline styling
Use the HTML <style> element to define internal CSS
Use the HTML <link> element to refer to an external CSS file
Use the HTML <head> element to store <style> and <link> elements
Use the CSS color property for text colors
Use the CSS font-family property for text fonts
Use the CSS font-size property for text sizes
Use the CSS border property for borders
Use the CSS padding property for space inside the border
Use the CSS margin property for space outside the border

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# HTML Tables
HTML tables allow web developers to arrange data into rows and columns.

# Table Cells
Each table cell is defined by a <td> and a </td> tag.
td stands for table data.
Everything between <td> and </td> are the content of the table cell.
Note: table data elements are the data containers of the table.
They can contain all sorts of HTML elements; text, images, lists, other tables, etc.

# Table Rows
Each table row starts with a <tr> and end with a </tr> tag.
tr stands for table row.

# Table Headers
Sometimes you want your cells to be headers, in those cases use the <th> tag instead of the <td> tag:
By default, the text in <th> elements are bold and centered, but you can change that with CSS.

# HTML Table Tags
Tag	Description
<table>	Defines a table
<th>	Defines a header cell in a table
<tr>	Defines a row in a table
<td>	Defines a cell in a table
<caption>	Defines a table caption
<colgroup>	Specifies a group of one or more columns in a table for formatting
<col>	Specifies column properties for each column within a <colgroup> element
<thead>	Groups the header content in a table
<tbody>	Groups the body content in a table
<tfoot>	Groups the footer content in a table

# HTML Table Borders
HTML tables can have borders of different styles and shapes.

# How To Add a Border
When you add a border to a table, you also add borders around each table cell:	 	 
To add a border, use the CSS border property on table, th, and td elements:

# Collapsed Table Borders
To avoid having double borders like in the example above, set the CSS border-collapse property to collapse.
This will make the borders collapse into a single border:

# Style Table Borders
If you set a background color of each cell, and give the border a white color (the same as the document background), you get the impression of an invisible border:

# Round Table Borders
With the border-radius property, the borders get rounded corners:
Skip the border around the table by leaving out table from the css selector:

# Dotted Table Borders
With the border-style property, you can set the appereance of the border.
The following values are allowed:
dotted     
dashed     
solid     
double     
groove     
ridge     
inset     
outset     
none     
hidden  

# Border Color
With the border-color property, you can set the color of the border.

# HTML Table Sizes
HTML tables can have different sizes for each column, row or the entire table.
Use the style attribute with the width or height properties to specify the size of a table, row or column.

# HTML Table Width
To set the width of a table, add the style attribute to the <table> element:
Note: Using a percentage as the size unit for a width means how wide will this element be compared to its parent element, which in this case is the <body> element.

# HTML Table Column Width	 	 
To set the size of a specific column, add the style attribute on a <th> or <td> element:

# HTML Table Row Height	 	 
To set the height of a specific row, add the style attribute on a table row element:

# HTML Table Headers
HTML tables can have headers for each column or row, or for many columns/rows.

# Vertical Table Headers
To use the first column as table headers, define the first cell in each row as a th element:

# Align Table Headers
By default, table headers are bold and centered:
To left-align the table headers, use the CSS text-align property:

# Header for Multiple Columns
You can have a header that spans over two or more columns.
To do this, use the colspan attribute on the <th> element:

# Table Caption
You can add a caption that serves as a heading for the entire table.
# To add a caption to a table, use the <caption> tag:
Note: The <caption> tag should be inserted immediately after the <table> tag.

# HTML Table Padding & Spacing
HTML tables can adjust the padding inside the cells, and also the space between the cells.

# HTML Table - Cell Padding
Cell padding is the space between the cell edges and the cell content.
By default the padding is set to 0.
To add padding on table cells, use the CSS padding property:

To add padding only above the content, use the padding-top property.
And the others sides with the padding-bottom, padding-left, and padding-right properties:

# HTML Table - Cell Spacing
Cell spacing is the space between each cell.
By default the space is set to 2 pixels.
To change the space between table cells, use the CSS border-spacing property on the table element:

# HTML Table Colspan & Rowspan
HTML tables can have cells that spans over multiple rows and/or columns.

HTML Table - Colspan
To make a cell span over multiple columns, use the colspan attribute:
Note: The value of the colspan attribute represents the number of columns to span.

# HTML Table - Rowspan
To make a cell span over multiple rows, use the rowspan attribute:
Note: The value of the rowspan attribute represents the number of rows to span.

# HTML Table Styling
Use CSS to make your tables look better.

HTML Table - Zebra Stripes
If you add a background color on every other table row, you will get a nice zebra stripes effect.
To style every other table row element, use the :nth-child(even) selector like this:

#HTML Table - Vertical Zebra Stripes
To make vertical zebra stripes, style every other column, instead of every other row.
Note: Put the :nth-child() selector on both th and td elements if you want to have the styling on both headers and regular table cells.


# Combine Vertical and Horizontal Zebra Stripes
You can combine the styling from the two examples above and you will have stripes on every other row and every other column.
If you use a transparent color you will get an overlapping effect.
Use an rgba() color to specify the transparency of the color:

# Horizontal Dividers:
If you specify borders only at the bottom of each table row, you will have a table with horizontal dividers.
Add the border-bottom property to all tr elements to get horizontal dividers:

# Hoverable Table
Use the :hover selector on tr to highlight table rows on mouse over:

# HTML Table Colgroup
The <colgroup> element is used to style specific columns of a table.
If you want to style the two first columns of a table, use the <colgroup> and <col> elements.
The <colgroup> element should be used as a container for the column specifications.
Each group are specified with a <col> element.
The span attribute specifies how many columns that gets the style.
The style attribute specifies the style to give the columns.

Note: The <colgroup> tag must be a child of a <table> element and should be placed before any other table elements, like <thead>, <tr>, <td> etc., but after the <caption> element, if present.

# Legal CSS Properties
There are only a very limited selection of CSS properties that are allowed to be used in the colgroup:
width property
visibility property
background properties
border properties
All other CSS properties will have no effect on your tables.

# Multiple Col Elements
If you want to style more columns with different styles, use more <col> elements inside the <colgroup>:
# Empty Colgroups
If you want to style columns in the middle of a table, insert a "empty" <col> element (with no styles) for the columns before:
# Hide Columns
You can hide columns with the visibility: collapse property:
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# # HTML class Attribute:
The HTML class attribute is used to specify a class for an HTML element.
Multiple HTML elements can share the same class.
The <span> element is an inline container used to mark up a part of a text, or a part of a document

# Using The class Attribute:
The class attribute is often used to point to a class name in a style sheet. It can also be used by a JavaScript to access and manipulate elements with the specific class name.
In the following example we have three <div> elements with a class attribute with the value of "city". All of the three <div> elements will be styled equally according to the .city style definition in the head section:
The class attribute can be used on any HTML element.
Note: The class name is case sensitive!

The Syntax For Class
To create a class; write a period (.) character, followed by a class name. Then, define the CSS properties within curly braces {}:

# Multiple Classes
HTML elements can belong to more than one class.
To define multiple classes, separate the class names with a space, e.g. <div class="city main">. The element will be styled according to all the classes specified.
In the following example, the first <h2> element belongs to both the city class and also to the main class, and will get the CSS styles from both of the classes: 

Different Elements Can Share Same Class
Different HTML elements can point to the same class name.

# Use of The class Attribute in JavaScript
The class name can also be used by JavaScript to perform certain tasks for specific elements.
JavaScript can access elements with a specific class name with the getElementsByClassName() method:

The HTML class attribute specifies one or more class names for an element
Classes are used by CSS and JavaScript to select and access specific elements
The class attribute can be used on any HTML element
The class name is case sensitive
Different HTML elements can point to the same class name
JavaScript can access elements with a specific class name with the getElementsByClassName() method
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# HTML id Attribute:
The HTML id attribute is used to specify a unique id for an HTML element.
You cannot have more than one element with the same id in an HTML document.

Using The id Attribute
The id attribute specifies a unique id for an HTML element. The value of the id attribute must be unique within the HTML document.
The id attribute is used to point to a specific style declaration in a style sheet. It is also used by JavaScript to access and manipulate the element with the specific id.
The syntax for id is: write a hash character (#), followed by an id name. Then, define the CSS properties within curly braces {}.
Note: The id name is case sensitive!
Note: The id name must contain at least one character, cannot start with a number, and must not contain whitespaces (spaces, tabs, etc.).

# Difference Between Class and ID
A class name can be used by multiple HTML elements, while an id name must only be used by one HTML element within the page:

# HTML Bookmarks with ID and Links
HTML bookmarks are used to allow readers to jump to specific parts of a webpage.
Bookmarks can be useful if your page is very long.
To use a bookmark, you must first create it, and then add a link to it.
Then, when the link is clicked, the page will scroll to the location with the bookmark.


Using The id Attribute in JavaScript
The id attribute can also be used by JavaScript to perform some tasks for that specific element.
JavaScript can access an element with a specific id with the getElementById() method:

The id attribute is used to specify a unique id for an HTML element
The value of the id attribute must be unique within the HTML document
The id attribute is used by CSS and JavaScript to style/select a specific element
The value of the id attribute is case sensitive
The id attribute is also used to create HTML bookmarks
JavaScript can access an element with a specific id with the getElementById() method.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# HTML JavaScript
JavaScript makes HTML pages more dynamic and interactive.

# The HTML <script> Tag:
The HTML <script> tag is used to define a client-side script (JavaScript).
The <script> element either contains script statements, or it points to an external script file through the src attribute.
Common uses for JavaScript are image manipulation, form validation, and dynamic changes of content.
To select an HTML element, JavaScript most often uses the document.getElementById() method.
The HTML <noscript> Tag
The HTML <noscript> tag defines an alternate content to be displayed to users that have disabled scripts in their browser or have a browser that doesn't support scripts:



