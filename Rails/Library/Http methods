The Hypertext Transfer Protocol (HTTP) is designed to enable communications between clients and servers.
HTTP works as a request-response protocol between a client and server.
Example: A client (browser) sends an HTTP request to the server; then the server returns a response to the client. The response contains status information about the request and may also contain the requested content.

# HTTP Methods:
The primary or most commonly-used HTTP methods are POST, GET, PUT, PATCH, and DELETE. These methods correspond to create, read, update, and delete (or CRUD) operations, respectively.

HTTP Method	CRUD operation	
GET	        Read	
POST            Create
PATCH           Update
DELETE          Delete
PUT             Update/Replace


# The GET Method
GET is used to request data from a specified resource.
Data is visible to everyone in the URL
Some notes on GET requests:
GET requests can be cached
GET requests remain in the browser history
GET requests can be bookmarked
GET requests should never be used when dealing with sensitive data
GET requests have length restrictions
GET requests are only used to request data (not modify)
GET is less secure compared to POST because data sent is part of the URL
Never use GET when sending passwords or other sensitive information.


# The POST Method
POST is used to send data to a server to create/update a resource
Data is not displayed in the URL
Some notes on POST requests:
POST requests are never cached
POST requests do not remain in the browser history
POST requests cannot be bookmarked
POST requests have no restrictions on data length
POST is a little safer than GET because the parameters are not stored in browser history or in web server logs


# The PUT Method
PUT is used to send data to a server to create/update a resource.
The difference between POST and PUT is that PUT requests are idempotent. 
That is, calling the same PUT request multiple times will always produce the same result. 
In contrast, calling a POST request repeatedly have side effects of creating the same resource multiple times.


# The HEAD Method
HEAD is almost identical to GET, but without the response body.
In other words, if GET /users returns a list of users, then HEAD /users will make the same request but will not return the list of users.
HEAD requests are useful for checking what a GET request will return before actually making a GET request - like before downloading a large file or response body.


# The DELETE Method
The DELETE method deletes the specified resource.


# The PATCH Method
The PATCH method is used to apply partial modifications to a resource.

